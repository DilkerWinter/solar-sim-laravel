name: Deploy to Production on VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}
      
      - name: Add VPS host to known_hosts
        run: ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Sync files to VPS
        run: |
          rsync -avz --delete --exclude='.git' --exclude='node_modules' --exclude='vendor' --exclude='.env' ./ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:${{ secrets.VPS_PATH }}

      - name: Create SQLite DB if not exists
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            DB_DIR="${{ secrets.VPS_PATH }}/database"
            DB_FILE="${DB_DIR}/database.sqlite"

            mkdir -p "$DB_DIR"
            echo "Ensured directory exists: $DB_DIR"

            if [ ! -f "$DB_FILE" ]; then
              touch "$DB_FILE"
              echo "Created SQLite database file: $DB_FILE"
            else
              echo "SQLite database file already exists: $DB_FILE"
            fi
          EOF

      - name: Setup .env on VPS
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd "${{ secrets.VPS_PATH }}"

            DB_FULL_PATH="${{ secrets.VPS_PATH }}/database/database.sqlite"

            echo "APP_NAME=solarsim" > .env
            echo "APP_ENV=production" >> .env
            echo "APP_KEY=" >> .env 
            echo "APP_DEBUG=false" >> .env
            echo "APP_URL=https://solarsim.app.br" >> .env
            echo "DB_CONNECTION=sqlite" >> .env
            echo "DB_DATABASE=${DB_FULL_PATH}" >> .env

            php artisan key:generate --force
            echo ".env file setup complete and app key generated."
          EOF

      - name: Install Composer dependencies and migrate on VPS
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd "${{ secrets.VPS_PATH }}"
            composer install --no-dev --optimize-autoloader
            echo "Composer dependencies installed."
            php artisan migrate --force
            echo "Database migrations complete."
            php artisan config:cache
            php artisan route:cache
            echo "Laravel caches cleared and re-generated."
          EOF
